var video = document.createElement("video");
var canvasElement = document.getElementById("canvas");
var canvas = canvasElement.getContext("2d");
var found = false;

function handler(scn) {
    var h = {};
    var o = scn.split("?");
    var ho = o[0].split("://");
    var hos = ho[1].split("/");
    var qri = hos[1];
    var kv = o[1].split("&");
    kv.forEach(function(v, i, obj) { var oo = v.split("="); h[oo[0]] = oo[1]; });
    h.cha = "<%= @host.auth.session[params[:cha]] %>";
    h.pic = canvasElement.toDataURL();
    log({ icon: 'qr_code_2', message: JSON.stringify(h) });
    $.post("/" + qri, h, function(d) { log({ icon: "qr_code_2", message: JSON.stringify(d) }); $(".foot").hide(); });
}

function tick() {
    if (video.readyState === video.HAVE_ENOUGH_DATA) {
	canvasElement.height = video.videoHeight;
	canvasElement.width = video.videoWidth;
	canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
	var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
	var code = jsQR(imageData.data, imageData.width, imageData.height, { inversionAttempts: "dontInvert" });
	var onion = /.onion/g;
	var dom = /<%= @host.id %>/g;
	
	if (code) {
	    if (found == false) {
		var valid = false;
		
		if (dom.test(code.data)) { valid = true; }
		
		
		if (valid == true) {
	      	    found = true;
		    log({
			icon: "qr_code_2",
			message: "<span style='background-color: green; color: black; padding: 0 2% 0 2%;'>VALID!</span><span id='progress'><span class='cylon'></span></span>"
		    });
		    handler(code.data);
		} else {
                    log({
			icon: "qr_code",
			message: "<button class='goto' value='" + code.data + "'>" + code.data + "</button>"
		    });
		}
	    }
	}
    }
    requestAnimationFrame(tick);
} 

if (navigator.mediaDevices?.enumerateDevices) {
    navigator.mediaDevices.getUserMedia({ video: { facingMode: "environment" } }).then(function(stream) {
	log({ color: "green", icon: "notifications", message: "scanner started." });
	video.srcObject = stream;
	video.setAttribute("playsinline", true);
	video.play();
	requestAnimationFrame(tick);
    });
}
